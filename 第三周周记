```markdown
# 学习周记（2023年xx月xx日-xx月xx日）

## 本周学习主题：排序算法
本周系统学习了**冒泡排序、选择排序、插入排序、快速排序、归并排序和堆排序**的原理与代码实现。

---

### 一、遇到的困难
1. **算法理解上的挑战**  
   - 快速排序的**递归逻辑**和**分区交换过程**容易混淆，初次实现时因未处理好基准值位置导致栈溢出
   - 堆排序的**完全二叉树结构**和**堆调整过程**抽象性较强，`heapify`函数的操作逻辑不好理解
   - 归并排序的**分治思想**虽然理解，但实现时因忘记保存临时数组temp导致结果异常

2. **代码实现中的问题**  
   - 调试过程中发现**边界条件处理**容易被忽略（如空数组、重复元素）
   - 时间复杂度计算时混淆了**最坏情况**和**平均情况**（如选择排序始终O(n²) vs 快速排序退化情况）

---

### 二、学习收获
1. **知识层面**  
   - 建立排序算法的**分类认知**（比较类/非比较类、稳定/不稳定排序）
   - 掌握各算法**核心思想**（冒泡-相邻交换、快速-分治、堆-二叉树特性）
   - 理解**时间复杂度本质**：通过统计10万级数据量下各算法耗时，直观体会O(n²)与O(n logn)的差距

2. **能力提升**  
   - 学会使用**可视化工具**动态观察排序过程
   - 掌握**代码调试技巧**：通过逐行打印数组状态定位逻辑错误
   - 形成**性能分析思维**：在LeetCode题目[912.排序数组](https://leetcode.com/problems/sort-an-array/)中根据不同场景选择最优算法

3. **认知突破**  
   - 认识到**没有绝对最优算法**：小规模数据用插入排序更高效，大规模数据需用快速/归并排序
   - 发现**算法与数据结构的关联**：如堆排序本质是优先队列的应用

---

### 三、未来学习展望
---
**总结感悟**  
排序算法的学习像一面镜子，既照见自己在逻辑思维上的不足，也映射出计算机科学的精妙之美。
``` 
1. 具体代码调试案例
2. 各算法在不同数据集下的实测数据对比
